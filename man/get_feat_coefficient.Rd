% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_feat_coefficient.R
\name{get_feat_coefficient}
\alias{get_feat_coefficient}
\title{Get the Weighted Feature Coefficient by Users}
\usage{
get_feat_coefficient(
  cell_identity,
  raw_exprs = raw_exprs,
  LAMBDA = 0.01,
  n_permutation = 10000,
  pvalue = pvalue,
  sam.name = sam.name,
  LOW.DR = 0.03,
  UP.DR = 0.2,
  ngene.chr = 5,
  KS.cut = 0.1,
  win.size = 25,
  seed
)
}
\arguments{
\item{cell_identity}{A numeric matrix indicating cell identities,with spots in rows and cell identities in columns.}

\item{raw_exprs}{Raw gene expression matrix, with gene symbols in rows and spot names in columns.}

\item{LAMBDA}{A numeric value for the regularization parameter. Default is 0.01.}

\item{n_permutation}{An integer indicating the number of permutations for randomly shuffling the cell
labels of the input matrix to create a null distribution. Default is 10,000.}

\item{pvalue}{Significance threshold for weighted feature coefficients. Calculated by permutation.}

\item{sam.name}{Sample name}

\item{LOW.DR}{Minimal population fractions of genes for smoothing for copykat. Default is 0.03.}

\item{UP.DR}{Minimal population fractions of genes for segmentation for copykat. Default is 0.2.}

\item{ngene.chr}{Minimal number of genes per chromosome for cell filtering for copykat. Default is 5.}

\item{KS.cut}{Segmentation parameters, input 0 to 1; larger looser criteria for copykat. Default is 0.1.}

\item{win.size}{Minimal window sizes for segmentation for copykat. Default is 25.}

\item{seed}{Seed for random number generation for reproducibility.}
}
\value{
A matrix of weighted feature coefficients.
}
\description{
This function allows users to obtain their own weighted feature coefficient matrix.
}
\examples{
data(example_raw_count)
raw_exprs <- example_raw_count[,1:10]
cell_identity <- matrix(0, nrow = 10, ncol = 9)
rownames(cell_identity) <- colnames(raw_exprs)
colnames(cell_identity) <- paste0("cell_type", 1:9)
for (i in 1:10) {
 n_ones <- sample(0:3, 1)
  if (n_ones > 0) {
    ones_positions <- sample(1:9, n_ones)
    cell_identity[i, ones_positions] <- 1
  }
}
LAMBDA <- 0.01
n_permutation <- 10000
pvalue <- 0.05
sam.name <- "sample1"
LOW.DR <- 0.03
UP.DR <- 0.2
ngene.chr <- 10
KS.cut <- 0.1
win.size <- 25
seed <- 1234
get_feat_coefficient(cell_identity,
                     raw_exprs,
                     LAMBDA,
                     n_permutation,
                     pvalue,
                     sam.name,
                     LOW.DR,
                     UP.DR,
                     ngene.chr,
                     KS.cut,
                     win.size,
                     seed)
}
